/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PublicRouteImport } from './routes/_public/route'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as authSignInImport } from './routes/(auth)/sign-in'
import { Route as authOtpImport } from './routes/(auth)/otp'
import { Route as auth500Import } from './routes/(auth)/500'
import { Route as PublicLoginIndexImport } from './routes/_public/login/index'
import { Route as AuthenticatedBlogListImport } from './routes/_authenticated/blog/list'
import { Route as AuthenticatedBlogAddImport } from './routes/_authenticated/blog/add'
import { Route as AuthenticatedBlogIdImport } from './routes/_authenticated/blog/$id'
import { Route as AuthenticatedOrganizationsListIndexImport } from './routes/_authenticated/organizations/list/index'
import { Route as AuthenticatedOrganizationsAddIndexImport } from './routes/_authenticated/organizations/add/index'
import { Route as AuthenticatedOpportunitiesListIndexImport } from './routes/_authenticated/opportunities/list/index'
import { Route as AuthenticatedOpportunitiesAddIndexImport } from './routes/_authenticated/opportunities/add/index'
import { Route as AuthenticatedOpportunitiesOpportunityIdIndexImport } from './routes/_authenticated/opportunities/$opportunityId/index'
import { Route as AuthenticatedNewsListIndexImport } from './routes/_authenticated/news/list/index'
import { Route as AuthenticatedNewsAddIndexImport } from './routes/_authenticated/news/add/index'
import { Route as AuthenticatedNewsNewsIdIndexImport } from './routes/_authenticated/news/$newsId/index'
import { Route as AuthenticatedEventsListIndexImport } from './routes/_authenticated/events/list/index'
import { Route as AuthenticatedEventsAddIndexImport } from './routes/_authenticated/events/add/index'
import { Route as AuthenticatedEventsEventIdIndexImport } from './routes/_authenticated/events/$eventId/index'
import { Route as AuthenticatedBlogsAddIndexImport } from './routes/_authenticated/blogs/add/index'
import { Route as AuthenticatedBlogsBlogIdIndexImport } from './routes/_authenticated/blogs/$blogId/index'

// Create Virtual Routes

const errors503LazyImport = createFileRoute('/(errors)/503')()
const errors500LazyImport = createFileRoute('/(errors)/500')()
const errors404LazyImport = createFileRoute('/(errors)/404')()
const errors403LazyImport = createFileRoute('/(errors)/403')()
const errors401LazyImport = createFileRoute('/(errors)/401')()
const authSignUpLazyImport = createFileRoute('/(auth)/sign-up')()
const authSignIn2LazyImport = createFileRoute('/(auth)/sign-in-2')()
const authForgotPasswordLazyImport = createFileRoute(
  '/(auth)/forgot-password',
)()
const AuthenticatedSettingsRouteLazyImport = createFileRoute(
  '/_authenticated/settings',
)()
const AuthenticatedUsersIndexLazyImport = createFileRoute(
  '/_authenticated/users/',
)()
const AuthenticatedTasksIndexLazyImport = createFileRoute(
  '/_authenticated/tasks/',
)()
const AuthenticatedTagsIndexLazyImport = createFileRoute(
  '/_authenticated/tags/',
)()
const AuthenticatedSettingsIndexLazyImport = createFileRoute(
  '/_authenticated/settings/',
)()
const AuthenticatedHelpCenterIndexLazyImport = createFileRoute(
  '/_authenticated/help-center/',
)()
const AuthenticatedSettingsNotificationsLazyImport = createFileRoute(
  '/_authenticated/settings/notifications',
)()
const AuthenticatedSettingsDisplayLazyImport = createFileRoute(
  '/_authenticated/settings/display',
)()
const AuthenticatedSettingsAppearanceLazyImport = createFileRoute(
  '/_authenticated/settings/appearance',
)()
const AuthenticatedSettingsAccountLazyImport = createFileRoute(
  '/_authenticated/settings/account',
)()
const AuthenticatedTagsAddIndexLazyImport = createFileRoute(
  '/_authenticated/tags/add/',
)()

// Create/Update Routes

const PublicRouteRoute = PublicRouteImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const errors503LazyRoute = errors503LazyImport
  .update({
    id: '/(errors)/503',
    path: '/503',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/503.lazy').then((d) => d.Route))

const errors500LazyRoute = errors500LazyImport
  .update({
    id: '/(errors)/500',
    path: '/500',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/500.lazy').then((d) => d.Route))

const errors404LazyRoute = errors404LazyImport
  .update({
    id: '/(errors)/404',
    path: '/404',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/404.lazy').then((d) => d.Route))

const errors403LazyRoute = errors403LazyImport
  .update({
    id: '/(errors)/403',
    path: '/403',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/403.lazy').then((d) => d.Route))

const errors401LazyRoute = errors401LazyImport
  .update({
    id: '/(errors)/401',
    path: '/401',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/401.lazy').then((d) => d.Route))

const authSignUpLazyRoute = authSignUpLazyImport
  .update({
    id: '/(auth)/sign-up',
    path: '/sign-up',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/sign-up.lazy').then((d) => d.Route))

const authSignIn2LazyRoute = authSignIn2LazyImport
  .update({
    id: '/(auth)/sign-in-2',
    path: '/sign-in-2',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/sign-in-2.lazy').then((d) => d.Route))

const authForgotPasswordLazyRoute = authForgotPasswordLazyImport
  .update({
    id: '/(auth)/forgot-password',
    path: '/forgot-password',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() =>
    import('./routes/(auth)/forgot-password.lazy').then((d) => d.Route),
  )

const AuthenticatedSettingsRouteLazyRoute =
  AuthenticatedSettingsRouteLazyImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/route.lazy').then((d) => d.Route),
  )

const authSignInRoute = authSignInImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const authOtpRoute = authOtpImport.update({
  id: '/(auth)/otp',
  path: '/otp',
  getParentRoute: () => rootRoute,
} as any)

const auth500Route = auth500Import.update({
  id: '/(auth)/500',
  path: '/500',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedUsersIndexLazyRoute =
  AuthenticatedUsersIndexLazyImport.update({
    id: '/users/',
    path: '/users/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/users/index.lazy').then((d) => d.Route),
  )

const AuthenticatedTasksIndexLazyRoute =
  AuthenticatedTasksIndexLazyImport.update({
    id: '/tasks/',
    path: '/tasks/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/tasks/index.lazy').then((d) => d.Route),
  )

const AuthenticatedTagsIndexLazyRoute = AuthenticatedTagsIndexLazyImport.update(
  {
    id: '/tags/',
    path: '/tags/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
).lazy(() =>
  import('./routes/_authenticated/tags/index.lazy').then((d) => d.Route),
)

const AuthenticatedSettingsIndexLazyRoute =
  AuthenticatedSettingsIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/index.lazy').then((d) => d.Route),
  )

const AuthenticatedHelpCenterIndexLazyRoute =
  AuthenticatedHelpCenterIndexLazyImport.update({
    id: '/help-center/',
    path: '/help-center/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/help-center/index.lazy').then(
      (d) => d.Route,
    ),
  )

const PublicLoginIndexRoute = PublicLoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => PublicRouteRoute,
} as any)

const AuthenticatedSettingsNotificationsLazyRoute =
  AuthenticatedSettingsNotificationsLazyImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/notifications.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSettingsDisplayLazyRoute =
  AuthenticatedSettingsDisplayLazyImport.update({
    id: '/display',
    path: '/display',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/display.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSettingsAppearanceLazyRoute =
  AuthenticatedSettingsAppearanceLazyImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/appearance.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSettingsAccountLazyRoute =
  AuthenticatedSettingsAccountLazyImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/account.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedBlogListRoute = AuthenticatedBlogListImport.update({
  id: '/blog/list',
  path: '/blog/list',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedBlogAddRoute = AuthenticatedBlogAddImport.update({
  id: '/blog/add',
  path: '/blog/add',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedBlogIdRoute = AuthenticatedBlogIdImport.update({
  id: '/blog/$id',
  path: '/blog/$id',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedTagsAddIndexLazyRoute =
  AuthenticatedTagsAddIndexLazyImport.update({
    id: '/tags/add/',
    path: '/tags/add/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/tags/add/index.lazy').then((d) => d.Route),
  )

const AuthenticatedOrganizationsListIndexRoute =
  AuthenticatedOrganizationsListIndexImport.update({
    id: '/organizations/list/',
    path: '/organizations/list/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedOrganizationsAddIndexRoute =
  AuthenticatedOrganizationsAddIndexImport.update({
    id: '/organizations/add/',
    path: '/organizations/add/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedOpportunitiesListIndexRoute =
  AuthenticatedOpportunitiesListIndexImport.update({
    id: '/opportunities/list/',
    path: '/opportunities/list/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedOpportunitiesAddIndexRoute =
  AuthenticatedOpportunitiesAddIndexImport.update({
    id: '/opportunities/add/',
    path: '/opportunities/add/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedOpportunitiesOpportunityIdIndexRoute =
  AuthenticatedOpportunitiesOpportunityIdIndexImport.update({
    id: '/opportunities/$opportunityId/',
    path: '/opportunities/$opportunityId/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedNewsListIndexRoute = AuthenticatedNewsListIndexImport.update(
  {
    id: '/news/list/',
    path: '/news/list/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
)

const AuthenticatedNewsAddIndexRoute = AuthenticatedNewsAddIndexImport.update({
  id: '/news/add/',
  path: '/news/add/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedNewsNewsIdIndexRoute =
  AuthenticatedNewsNewsIdIndexImport.update({
    id: '/news/$newsId/',
    path: '/news/$newsId/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedEventsListIndexRoute =
  AuthenticatedEventsListIndexImport.update({
    id: '/events/list/',
    path: '/events/list/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedEventsAddIndexRoute =
  AuthenticatedEventsAddIndexImport.update({
    id: '/events/add/',
    path: '/events/add/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedEventsEventIdIndexRoute =
  AuthenticatedEventsEventIdIndexImport.update({
    id: '/events/$eventId/',
    path: '/events/$eventId/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedBlogsAddIndexRoute = AuthenticatedBlogsAddIndexImport.update(
  {
    id: '/blogs/add/',
    path: '/blogs/add/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
)

const AuthenticatedBlogsBlogIdIndexRoute =
  AuthenticatedBlogsBlogIdIndexImport.update({
    id: '/blogs/$blogId/',
    path: '/blogs/$blogId/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicRouteImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/500': {
      id: '/(auth)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof auth500Import
      parentRoute: typeof rootRoute
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in-2': {
      id: '/(auth)/sign-in-2'
      path: '/sign-in-2'
      fullPath: '/sign-in-2'
      preLoaderRoute: typeof authSignIn2LazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpLazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503LazyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/blog/$id': {
      id: '/_authenticated/blog/$id'
      path: '/blog/$id'
      fullPath: '/blog/$id'
      preLoaderRoute: typeof AuthenticatedBlogIdImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/blog/add': {
      id: '/_authenticated/blog/add'
      path: '/blog/add'
      fullPath: '/blog/add'
      preLoaderRoute: typeof AuthenticatedBlogAddImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/blog/list': {
      id: '/_authenticated/blog/list'
      path: '/blog/list'
      fullPath: '/blog/list'
      preLoaderRoute: typeof AuthenticatedBlogListImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/settings/account': {
      id: '/_authenticated/settings/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof AuthenticatedSettingsAccountLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/settings/appearance': {
      id: '/_authenticated/settings/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof AuthenticatedSettingsAppearanceLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/settings/display': {
      id: '/_authenticated/settings/display'
      path: '/display'
      fullPath: '/settings/display'
      preLoaderRoute: typeof AuthenticatedSettingsDisplayLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/settings/notifications': {
      id: '/_authenticated/settings/notifications'
      path: '/notifications'
      fullPath: '/settings/notifications'
      preLoaderRoute: typeof AuthenticatedSettingsNotificationsLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_public/login/': {
      id: '/_public/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof PublicLoginIndexImport
      parentRoute: typeof PublicRouteImport
    }
    '/_authenticated/help-center/': {
      id: '/_authenticated/help-center/'
      path: '/help-center'
      fullPath: '/help-center'
      preLoaderRoute: typeof AuthenticatedHelpCenterIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AuthenticatedSettingsIndexLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/tags/': {
      id: '/_authenticated/tags/'
      path: '/tags'
      fullPath: '/tags'
      preLoaderRoute: typeof AuthenticatedTagsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/tasks/': {
      id: '/_authenticated/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof AuthenticatedTasksIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/users/': {
      id: '/_authenticated/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedUsersIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/blogs/$blogId/': {
      id: '/_authenticated/blogs/$blogId/'
      path: '/blogs/$blogId'
      fullPath: '/blogs/$blogId'
      preLoaderRoute: typeof AuthenticatedBlogsBlogIdIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/blogs/add/': {
      id: '/_authenticated/blogs/add/'
      path: '/blogs/add'
      fullPath: '/blogs/add'
      preLoaderRoute: typeof AuthenticatedBlogsAddIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/events/$eventId/': {
      id: '/_authenticated/events/$eventId/'
      path: '/events/$eventId'
      fullPath: '/events/$eventId'
      preLoaderRoute: typeof AuthenticatedEventsEventIdIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/events/add/': {
      id: '/_authenticated/events/add/'
      path: '/events/add'
      fullPath: '/events/add'
      preLoaderRoute: typeof AuthenticatedEventsAddIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/events/list/': {
      id: '/_authenticated/events/list/'
      path: '/events/list'
      fullPath: '/events/list'
      preLoaderRoute: typeof AuthenticatedEventsListIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/news/$newsId/': {
      id: '/_authenticated/news/$newsId/'
      path: '/news/$newsId'
      fullPath: '/news/$newsId'
      preLoaderRoute: typeof AuthenticatedNewsNewsIdIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/news/add/': {
      id: '/_authenticated/news/add/'
      path: '/news/add'
      fullPath: '/news/add'
      preLoaderRoute: typeof AuthenticatedNewsAddIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/news/list/': {
      id: '/_authenticated/news/list/'
      path: '/news/list'
      fullPath: '/news/list'
      preLoaderRoute: typeof AuthenticatedNewsListIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/opportunities/$opportunityId/': {
      id: '/_authenticated/opportunities/$opportunityId/'
      path: '/opportunities/$opportunityId'
      fullPath: '/opportunities/$opportunityId'
      preLoaderRoute: typeof AuthenticatedOpportunitiesOpportunityIdIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/opportunities/add/': {
      id: '/_authenticated/opportunities/add/'
      path: '/opportunities/add'
      fullPath: '/opportunities/add'
      preLoaderRoute: typeof AuthenticatedOpportunitiesAddIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/opportunities/list/': {
      id: '/_authenticated/opportunities/list/'
      path: '/opportunities/list'
      fullPath: '/opportunities/list'
      preLoaderRoute: typeof AuthenticatedOpportunitiesListIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/organizations/add/': {
      id: '/_authenticated/organizations/add/'
      path: '/organizations/add'
      fullPath: '/organizations/add'
      preLoaderRoute: typeof AuthenticatedOrganizationsAddIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/organizations/list/': {
      id: '/_authenticated/organizations/list/'
      path: '/organizations/list'
      fullPath: '/organizations/list'
      preLoaderRoute: typeof AuthenticatedOrganizationsListIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/tags/add/': {
      id: '/_authenticated/tags/add/'
      path: '/tags/add'
      fullPath: '/tags/add'
      preLoaderRoute: typeof AuthenticatedTagsAddIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedSettingsRouteLazyRouteChildren {
  AuthenticatedSettingsAccountLazyRoute: typeof AuthenticatedSettingsAccountLazyRoute
  AuthenticatedSettingsAppearanceLazyRoute: typeof AuthenticatedSettingsAppearanceLazyRoute
  AuthenticatedSettingsDisplayLazyRoute: typeof AuthenticatedSettingsDisplayLazyRoute
  AuthenticatedSettingsNotificationsLazyRoute: typeof AuthenticatedSettingsNotificationsLazyRoute
  AuthenticatedSettingsIndexLazyRoute: typeof AuthenticatedSettingsIndexLazyRoute
}

const AuthenticatedSettingsRouteLazyRouteChildren: AuthenticatedSettingsRouteLazyRouteChildren =
  {
    AuthenticatedSettingsAccountLazyRoute:
      AuthenticatedSettingsAccountLazyRoute,
    AuthenticatedSettingsAppearanceLazyRoute:
      AuthenticatedSettingsAppearanceLazyRoute,
    AuthenticatedSettingsDisplayLazyRoute:
      AuthenticatedSettingsDisplayLazyRoute,
    AuthenticatedSettingsNotificationsLazyRoute:
      AuthenticatedSettingsNotificationsLazyRoute,
    AuthenticatedSettingsIndexLazyRoute: AuthenticatedSettingsIndexLazyRoute,
  }

const AuthenticatedSettingsRouteLazyRouteWithChildren =
  AuthenticatedSettingsRouteLazyRoute._addFileChildren(
    AuthenticatedSettingsRouteLazyRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedSettingsRouteLazyRoute: typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedBlogIdRoute: typeof AuthenticatedBlogIdRoute
  AuthenticatedBlogAddRoute: typeof AuthenticatedBlogAddRoute
  AuthenticatedBlogListRoute: typeof AuthenticatedBlogListRoute
  AuthenticatedHelpCenterIndexLazyRoute: typeof AuthenticatedHelpCenterIndexLazyRoute
  AuthenticatedTagsIndexLazyRoute: typeof AuthenticatedTagsIndexLazyRoute
  AuthenticatedTasksIndexLazyRoute: typeof AuthenticatedTasksIndexLazyRoute
  AuthenticatedUsersIndexLazyRoute: typeof AuthenticatedUsersIndexLazyRoute
  AuthenticatedBlogsBlogIdIndexRoute: typeof AuthenticatedBlogsBlogIdIndexRoute
  AuthenticatedBlogsAddIndexRoute: typeof AuthenticatedBlogsAddIndexRoute
  AuthenticatedEventsEventIdIndexRoute: typeof AuthenticatedEventsEventIdIndexRoute
  AuthenticatedEventsAddIndexRoute: typeof AuthenticatedEventsAddIndexRoute
  AuthenticatedEventsListIndexRoute: typeof AuthenticatedEventsListIndexRoute
  AuthenticatedNewsNewsIdIndexRoute: typeof AuthenticatedNewsNewsIdIndexRoute
  AuthenticatedNewsAddIndexRoute: typeof AuthenticatedNewsAddIndexRoute
  AuthenticatedNewsListIndexRoute: typeof AuthenticatedNewsListIndexRoute
  AuthenticatedOpportunitiesOpportunityIdIndexRoute: typeof AuthenticatedOpportunitiesOpportunityIdIndexRoute
  AuthenticatedOpportunitiesAddIndexRoute: typeof AuthenticatedOpportunitiesAddIndexRoute
  AuthenticatedOpportunitiesListIndexRoute: typeof AuthenticatedOpportunitiesListIndexRoute
  AuthenticatedOrganizationsAddIndexRoute: typeof AuthenticatedOrganizationsAddIndexRoute
  AuthenticatedOrganizationsListIndexRoute: typeof AuthenticatedOrganizationsListIndexRoute
  AuthenticatedTagsAddIndexLazyRoute: typeof AuthenticatedTagsAddIndexLazyRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedSettingsRouteLazyRoute:
    AuthenticatedSettingsRouteLazyRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedBlogIdRoute: AuthenticatedBlogIdRoute,
  AuthenticatedBlogAddRoute: AuthenticatedBlogAddRoute,
  AuthenticatedBlogListRoute: AuthenticatedBlogListRoute,
  AuthenticatedHelpCenterIndexLazyRoute: AuthenticatedHelpCenterIndexLazyRoute,
  AuthenticatedTagsIndexLazyRoute: AuthenticatedTagsIndexLazyRoute,
  AuthenticatedTasksIndexLazyRoute: AuthenticatedTasksIndexLazyRoute,
  AuthenticatedUsersIndexLazyRoute: AuthenticatedUsersIndexLazyRoute,
  AuthenticatedBlogsBlogIdIndexRoute: AuthenticatedBlogsBlogIdIndexRoute,
  AuthenticatedBlogsAddIndexRoute: AuthenticatedBlogsAddIndexRoute,
  AuthenticatedEventsEventIdIndexRoute: AuthenticatedEventsEventIdIndexRoute,
  AuthenticatedEventsAddIndexRoute: AuthenticatedEventsAddIndexRoute,
  AuthenticatedEventsListIndexRoute: AuthenticatedEventsListIndexRoute,
  AuthenticatedNewsNewsIdIndexRoute: AuthenticatedNewsNewsIdIndexRoute,
  AuthenticatedNewsAddIndexRoute: AuthenticatedNewsAddIndexRoute,
  AuthenticatedNewsListIndexRoute: AuthenticatedNewsListIndexRoute,
  AuthenticatedOpportunitiesOpportunityIdIndexRoute:
    AuthenticatedOpportunitiesOpportunityIdIndexRoute,
  AuthenticatedOpportunitiesAddIndexRoute:
    AuthenticatedOpportunitiesAddIndexRoute,
  AuthenticatedOpportunitiesListIndexRoute:
    AuthenticatedOpportunitiesListIndexRoute,
  AuthenticatedOrganizationsAddIndexRoute:
    AuthenticatedOrganizationsAddIndexRoute,
  AuthenticatedOrganizationsListIndexRoute:
    AuthenticatedOrganizationsListIndexRoute,
  AuthenticatedTagsAddIndexLazyRoute: AuthenticatedTagsAddIndexLazyRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

interface PublicRouteRouteChildren {
  PublicLoginIndexRoute: typeof PublicLoginIndexRoute
}

const PublicRouteRouteChildren: PublicRouteRouteChildren = {
  PublicLoginIndexRoute: PublicLoginIndexRoute,
}

const PublicRouteRouteWithChildren = PublicRouteRoute._addFileChildren(
  PublicRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof PublicRouteRouteWithChildren
  '/500': typeof errors500LazyRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/settings': typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/sign-in-2': typeof authSignIn2LazyRoute
  '/sign-up': typeof authSignUpLazyRoute
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/503': typeof errors503LazyRoute
  '/': typeof AuthenticatedIndexRoute
  '/blog/$id': typeof AuthenticatedBlogIdRoute
  '/blog/add': typeof AuthenticatedBlogAddRoute
  '/blog/list': typeof AuthenticatedBlogListRoute
  '/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceLazyRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayLazyRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
  '/login': typeof PublicLoginIndexRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/settings/': typeof AuthenticatedSettingsIndexLazyRoute
  '/tags': typeof AuthenticatedTagsIndexLazyRoute
  '/tasks': typeof AuthenticatedTasksIndexLazyRoute
  '/users': typeof AuthenticatedUsersIndexLazyRoute
  '/blogs/$blogId': typeof AuthenticatedBlogsBlogIdIndexRoute
  '/blogs/add': typeof AuthenticatedBlogsAddIndexRoute
  '/events/$eventId': typeof AuthenticatedEventsEventIdIndexRoute
  '/events/add': typeof AuthenticatedEventsAddIndexRoute
  '/events/list': typeof AuthenticatedEventsListIndexRoute
  '/news/$newsId': typeof AuthenticatedNewsNewsIdIndexRoute
  '/news/add': typeof AuthenticatedNewsAddIndexRoute
  '/news/list': typeof AuthenticatedNewsListIndexRoute
  '/opportunities/$opportunityId': typeof AuthenticatedOpportunitiesOpportunityIdIndexRoute
  '/opportunities/add': typeof AuthenticatedOpportunitiesAddIndexRoute
  '/opportunities/list': typeof AuthenticatedOpportunitiesListIndexRoute
  '/organizations/add': typeof AuthenticatedOrganizationsAddIndexRoute
  '/organizations/list': typeof AuthenticatedOrganizationsListIndexRoute
  '/tags/add': typeof AuthenticatedTagsAddIndexLazyRoute
}

export interface FileRoutesByTo {
  '': typeof PublicRouteRouteWithChildren
  '/500': typeof errors500LazyRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/sign-in-2': typeof authSignIn2LazyRoute
  '/sign-up': typeof authSignUpLazyRoute
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/503': typeof errors503LazyRoute
  '/': typeof AuthenticatedIndexRoute
  '/blog/$id': typeof AuthenticatedBlogIdRoute
  '/blog/add': typeof AuthenticatedBlogAddRoute
  '/blog/list': typeof AuthenticatedBlogListRoute
  '/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceLazyRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayLazyRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
  '/login': typeof PublicLoginIndexRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/settings': typeof AuthenticatedSettingsIndexLazyRoute
  '/tags': typeof AuthenticatedTagsIndexLazyRoute
  '/tasks': typeof AuthenticatedTasksIndexLazyRoute
  '/users': typeof AuthenticatedUsersIndexLazyRoute
  '/blogs/$blogId': typeof AuthenticatedBlogsBlogIdIndexRoute
  '/blogs/add': typeof AuthenticatedBlogsAddIndexRoute
  '/events/$eventId': typeof AuthenticatedEventsEventIdIndexRoute
  '/events/add': typeof AuthenticatedEventsAddIndexRoute
  '/events/list': typeof AuthenticatedEventsListIndexRoute
  '/news/$newsId': typeof AuthenticatedNewsNewsIdIndexRoute
  '/news/add': typeof AuthenticatedNewsAddIndexRoute
  '/news/list': typeof AuthenticatedNewsListIndexRoute
  '/opportunities/$opportunityId': typeof AuthenticatedOpportunitiesOpportunityIdIndexRoute
  '/opportunities/add': typeof AuthenticatedOpportunitiesAddIndexRoute
  '/opportunities/list': typeof AuthenticatedOpportunitiesListIndexRoute
  '/organizations/add': typeof AuthenticatedOrganizationsAddIndexRoute
  '/organizations/list': typeof AuthenticatedOrganizationsListIndexRoute
  '/tags/add': typeof AuthenticatedTagsAddIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_public': typeof PublicRouteRouteWithChildren
  '/(auth)/500': typeof auth500Route
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordLazyRoute
  '/(auth)/sign-in-2': typeof authSignIn2LazyRoute
  '/(auth)/sign-up': typeof authSignUpLazyRoute
  '/(errors)/401': typeof errors401LazyRoute
  '/(errors)/403': typeof errors403LazyRoute
  '/(errors)/404': typeof errors404LazyRoute
  '/(errors)/500': typeof errors500LazyRoute
  '/(errors)/503': typeof errors503LazyRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/blog/$id': typeof AuthenticatedBlogIdRoute
  '/_authenticated/blog/add': typeof AuthenticatedBlogAddRoute
  '/_authenticated/blog/list': typeof AuthenticatedBlogListRoute
  '/_authenticated/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/_authenticated/settings/appearance': typeof AuthenticatedSettingsAppearanceLazyRoute
  '/_authenticated/settings/display': typeof AuthenticatedSettingsDisplayLazyRoute
  '/_authenticated/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
  '/_public/login/': typeof PublicLoginIndexRoute
  '/_authenticated/help-center/': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexLazyRoute
  '/_authenticated/tags/': typeof AuthenticatedTagsIndexLazyRoute
  '/_authenticated/tasks/': typeof AuthenticatedTasksIndexLazyRoute
  '/_authenticated/users/': typeof AuthenticatedUsersIndexLazyRoute
  '/_authenticated/blogs/$blogId/': typeof AuthenticatedBlogsBlogIdIndexRoute
  '/_authenticated/blogs/add/': typeof AuthenticatedBlogsAddIndexRoute
  '/_authenticated/events/$eventId/': typeof AuthenticatedEventsEventIdIndexRoute
  '/_authenticated/events/add/': typeof AuthenticatedEventsAddIndexRoute
  '/_authenticated/events/list/': typeof AuthenticatedEventsListIndexRoute
  '/_authenticated/news/$newsId/': typeof AuthenticatedNewsNewsIdIndexRoute
  '/_authenticated/news/add/': typeof AuthenticatedNewsAddIndexRoute
  '/_authenticated/news/list/': typeof AuthenticatedNewsListIndexRoute
  '/_authenticated/opportunities/$opportunityId/': typeof AuthenticatedOpportunitiesOpportunityIdIndexRoute
  '/_authenticated/opportunities/add/': typeof AuthenticatedOpportunitiesAddIndexRoute
  '/_authenticated/opportunities/list/': typeof AuthenticatedOpportunitiesListIndexRoute
  '/_authenticated/organizations/add/': typeof AuthenticatedOrganizationsAddIndexRoute
  '/_authenticated/organizations/list/': typeof AuthenticatedOrganizationsListIndexRoute
  '/_authenticated/tags/add/': typeof AuthenticatedTagsAddIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/500'
    | '/otp'
    | '/sign-in'
    | '/settings'
    | '/forgot-password'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/503'
    | '/'
    | '/blog/$id'
    | '/blog/add'
    | '/blog/list'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/login'
    | '/help-center'
    | '/settings/'
    | '/tags'
    | '/tasks'
    | '/users'
    | '/blogs/$blogId'
    | '/blogs/add'
    | '/events/$eventId'
    | '/events/add'
    | '/events/list'
    | '/news/$newsId'
    | '/news/add'
    | '/news/list'
    | '/opportunities/$opportunityId'
    | '/opportunities/add'
    | '/opportunities/list'
    | '/organizations/add'
    | '/organizations/list'
    | '/tags/add'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/500'
    | '/otp'
    | '/sign-in'
    | '/forgot-password'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/503'
    | '/'
    | '/blog/$id'
    | '/blog/add'
    | '/blog/list'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/login'
    | '/help-center'
    | '/settings'
    | '/tags'
    | '/tasks'
    | '/users'
    | '/blogs/$blogId'
    | '/blogs/add'
    | '/events/$eventId'
    | '/events/add'
    | '/events/list'
    | '/news/$newsId'
    | '/news/add'
    | '/news/list'
    | '/opportunities/$opportunityId'
    | '/opportunities/add'
    | '/opportunities/list'
    | '/organizations/add'
    | '/organizations/list'
    | '/tags/add'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_public'
    | '/(auth)/500'
    | '/(auth)/otp'
    | '/(auth)/sign-in'
    | '/_authenticated/settings'
    | '/(auth)/forgot-password'
    | '/(auth)/sign-in-2'
    | '/(auth)/sign-up'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/'
    | '/_authenticated/blog/$id'
    | '/_authenticated/blog/add'
    | '/_authenticated/blog/list'
    | '/_authenticated/settings/account'
    | '/_authenticated/settings/appearance'
    | '/_authenticated/settings/display'
    | '/_authenticated/settings/notifications'
    | '/_public/login/'
    | '/_authenticated/help-center/'
    | '/_authenticated/settings/'
    | '/_authenticated/tags/'
    | '/_authenticated/tasks/'
    | '/_authenticated/users/'
    | '/_authenticated/blogs/$blogId/'
    | '/_authenticated/blogs/add/'
    | '/_authenticated/events/$eventId/'
    | '/_authenticated/events/add/'
    | '/_authenticated/events/list/'
    | '/_authenticated/news/$newsId/'
    | '/_authenticated/news/add/'
    | '/_authenticated/news/list/'
    | '/_authenticated/opportunities/$opportunityId/'
    | '/_authenticated/opportunities/add/'
    | '/_authenticated/opportunities/list/'
    | '/_authenticated/organizations/add/'
    | '/_authenticated/organizations/list/'
    | '/_authenticated/tags/add/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  PublicRouteRoute: typeof PublicRouteRouteWithChildren
  auth500Route: typeof auth500Route
  authOtpRoute: typeof authOtpRoute
  authSignInRoute: typeof authSignInRoute
  authForgotPasswordLazyRoute: typeof authForgotPasswordLazyRoute
  authSignIn2LazyRoute: typeof authSignIn2LazyRoute
  authSignUpLazyRoute: typeof authSignUpLazyRoute
  errors401LazyRoute: typeof errors401LazyRoute
  errors403LazyRoute: typeof errors403LazyRoute
  errors404LazyRoute: typeof errors404LazyRoute
  errors500LazyRoute: typeof errors500LazyRoute
  errors503LazyRoute: typeof errors503LazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  PublicRouteRoute: PublicRouteRouteWithChildren,
  auth500Route: auth500Route,
  authOtpRoute: authOtpRoute,
  authSignInRoute: authSignInRoute,
  authForgotPasswordLazyRoute: authForgotPasswordLazyRoute,
  authSignIn2LazyRoute: authSignIn2LazyRoute,
  authSignUpLazyRoute: authSignUpLazyRoute,
  errors401LazyRoute: errors401LazyRoute,
  errors403LazyRoute: errors403LazyRoute,
  errors404LazyRoute: errors404LazyRoute,
  errors500LazyRoute: errors500LazyRoute,
  errors503LazyRoute: errors503LazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/_public",
        "/(auth)/500",
        "/(auth)/otp",
        "/(auth)/sign-in",
        "/(auth)/forgot-password",
        "/(auth)/sign-in-2",
        "/(auth)/sign-up",
        "/(errors)/401",
        "/(errors)/403",
        "/(errors)/404",
        "/(errors)/500",
        "/(errors)/503"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/settings",
        "/_authenticated/",
        "/_authenticated/blog/$id",
        "/_authenticated/blog/add",
        "/_authenticated/blog/list",
        "/_authenticated/help-center/",
        "/_authenticated/tags/",
        "/_authenticated/tasks/",
        "/_authenticated/users/",
        "/_authenticated/blogs/$blogId/",
        "/_authenticated/blogs/add/",
        "/_authenticated/events/$eventId/",
        "/_authenticated/events/add/",
        "/_authenticated/events/list/",
        "/_authenticated/news/$newsId/",
        "/_authenticated/news/add/",
        "/_authenticated/news/list/",
        "/_authenticated/opportunities/$opportunityId/",
        "/_authenticated/opportunities/add/",
        "/_authenticated/opportunities/list/",
        "/_authenticated/organizations/add/",
        "/_authenticated/organizations/list/",
        "/_authenticated/tags/add/"
      ]
    },
    "/_public": {
      "filePath": "_public/route.tsx",
      "children": [
        "/_public/login/"
      ]
    },
    "/(auth)/500": {
      "filePath": "(auth)/500.tsx"
    },
    "/(auth)/otp": {
      "filePath": "(auth)/otp.tsx"
    },
    "/(auth)/sign-in": {
      "filePath": "(auth)/sign-in.tsx"
    },
    "/_authenticated/settings": {
      "filePath": "_authenticated/settings/route.lazy.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/settings/account",
        "/_authenticated/settings/appearance",
        "/_authenticated/settings/display",
        "/_authenticated/settings/notifications",
        "/_authenticated/settings/"
      ]
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.lazy.tsx"
    },
    "/(auth)/sign-in-2": {
      "filePath": "(auth)/sign-in-2.lazy.tsx"
    },
    "/(auth)/sign-up": {
      "filePath": "(auth)/sign-up.lazy.tsx"
    },
    "/(errors)/401": {
      "filePath": "(errors)/401.lazy.tsx"
    },
    "/(errors)/403": {
      "filePath": "(errors)/403.lazy.tsx"
    },
    "/(errors)/404": {
      "filePath": "(errors)/404.lazy.tsx"
    },
    "/(errors)/500": {
      "filePath": "(errors)/500.lazy.tsx"
    },
    "/(errors)/503": {
      "filePath": "(errors)/503.lazy.tsx"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/blog/$id": {
      "filePath": "_authenticated/blog/$id.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/blog/add": {
      "filePath": "_authenticated/blog/add.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/blog/list": {
      "filePath": "_authenticated/blog/list.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/account": {
      "filePath": "_authenticated/settings/account.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/appearance": {
      "filePath": "_authenticated/settings/appearance.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/display": {
      "filePath": "_authenticated/settings/display.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/notifications": {
      "filePath": "_authenticated/settings/notifications.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_public/login/": {
      "filePath": "_public/login/index.tsx",
      "parent": "/_public"
    },
    "/_authenticated/help-center/": {
      "filePath": "_authenticated/help-center/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/": {
      "filePath": "_authenticated/settings/index.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/tags/": {
      "filePath": "_authenticated/tags/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/tasks/": {
      "filePath": "_authenticated/tasks/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/users/": {
      "filePath": "_authenticated/users/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/blogs/$blogId/": {
      "filePath": "_authenticated/blogs/$blogId/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/blogs/add/": {
      "filePath": "_authenticated/blogs/add/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/events/$eventId/": {
      "filePath": "_authenticated/events/$eventId/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/events/add/": {
      "filePath": "_authenticated/events/add/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/events/list/": {
      "filePath": "_authenticated/events/list/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/news/$newsId/": {
      "filePath": "_authenticated/news/$newsId/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/news/add/": {
      "filePath": "_authenticated/news/add/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/news/list/": {
      "filePath": "_authenticated/news/list/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/opportunities/$opportunityId/": {
      "filePath": "_authenticated/opportunities/$opportunityId/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/opportunities/add/": {
      "filePath": "_authenticated/opportunities/add/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/opportunities/list/": {
      "filePath": "_authenticated/opportunities/list/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/organizations/add/": {
      "filePath": "_authenticated/organizations/add/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/organizations/list/": {
      "filePath": "_authenticated/organizations/list/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/tags/add/": {
      "filePath": "_authenticated/tags/add/index.lazy.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
